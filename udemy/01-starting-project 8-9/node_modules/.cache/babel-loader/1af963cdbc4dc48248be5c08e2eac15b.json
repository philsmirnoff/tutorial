{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer);\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","amount","toggleCounter","authSlice","initialAuthState","login","isAuthenticated","logout","store","reducer","counterActions","actions"],"sources":["/Users/ilfiryakupov/Desktop/udemy/01-starting-project 8-9/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true};\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n  }\n  }\n})\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n//   if (action.type === 'increase') {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter\n//     };\n//   }\n\n\n//   return state;\n// }\n\n// const store = createStore(counterReducer);\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n\n})\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAE5D,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAAS,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAa,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C;EACA;AACF,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA,MAAMY,SAAS,GAAGhB,WAAW,CAAC;EAC5BM,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEU,gBAAgB;EAC9BT,QAAQ,EAAE;IACRU,KAAK,CAACR,KAAK,EAAE;MACXA,KAAK,CAACS,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDC,MAAM,CAACV,KAAK,EAAE;MACZA,KAAK,CAACS,eAAe,GAAG,KAAK;IAC/B;EACF;AAEF,CAAC,CAAC;AAEF,MAAME,KAAK,GAAGpB,cAAc,CAAC;EAC3BqB,OAAO,EAAEjB,YAAY,CAACiB;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAElD,eAAeH,KAAK"},"metadata":{},"sourceType":"module"}