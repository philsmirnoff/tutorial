{"ast":null,"code":"var _jsxFileName = \"/Users/ilfiryakupov/Desktop/udemy/01-starting-project 6/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null); // fetch rturns us a promise that allows us to react to response\n  // we will add then. to define the function that will be called\n  // once the data is fetched and we can add catch to handle errors\n  // this response argument here is an object with data about the response and we use json() to transform the data into a js object\n  // once the data treansformation is over we get the data as an argument\n  // and wwe can access to the array through the results property and store it in the movies state so we can update later\n  // old code\n  // function fetchMovieHandler() {\n  // fetch('https://swapi.dev/api/films/')\n  // .then(response => {\n  //   return response.json();\n  // })\n  // .then(data => {\n  // new code\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      }); // setMovies(data.results);\n\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch {\n      setError(error.message);\n    }\n\n    ;\n  } // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 44\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 47\n    }\n  }, \"Found no movies.\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","data","json","ok","Error","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"sources":["/Users/ilfiryakupov/Desktop/udemy/01-starting-project 6/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n    // fetch rturns us a promise that allows us to react to response\n    // we will add then. to define the function that will be called\n   // once the data is fetched and we can add catch to handle errors\n   // this response argument here is an object with data about the response and we use json() to transform the data into a js object\n   // once the data treansformation is over we get the data as an argument\n      // and wwe can access to the array through the results property and store it in the movies state so we can update later\n\n      // old code\n      // function fetchMovieHandler() {\n      // fetch('https://swapi.dev/api/films/')\n      // .then(response => {\n      //   return response.json();\n      // })\n      // .then(data => {\n\n      // new code\n      async function fetchMovieHandler() {\n        setIsLoading(true);\n        setError(null);\n        try {\n        const response = await fetch('https://swapi.dev/api/films/');\n        const data = await response.json();\n\n        if(!response.ok) {\n          throw new Error('Something went wrong!');\n        }\n        const transformedMovies = data.results.map(movieData => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date\n          };\n        });\n        // setMovies(data.results);\n        setMovies(transformedMovies);\n        setIsLoading(false);\n      } catch {\n        setError(error.message);\n      };\n    }\n\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* // if we are not loading we want to render the movies list */}\n        {!isLoading &&movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>Found no movies.</p>}\n        {/* // if we are loading we want to render the loading message */}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n  }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC,CAHa,CAKX;EACA;EACD;EACA;EACA;EACG;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,eAAeS,iBAAf,GAAmC;IACjCH,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACJ,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;MAEA,IAAG,CAACH,QAAQ,CAACI,EAAb,EAAiB;QACf,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MACD,MAAMC,iBAAiB,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;QACtD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B,CAPI,CAeJ;;MACAtB,SAAS,CAACY,iBAAD,CAAT;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CAlBC,CAkBA,MAAM;MACNE,QAAQ,CAACD,KAAK,CAACoB,OAAP,CAAR;IACD;;IAAA;EACF,CA7CU,CA+Cb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAElB,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEG,CAACJ,SAAD,IAAaF,MAAM,CAACyB,MAAP,GAAgB,CAA7B,iBAAkC,oBAAC,UAAD;IAAY,MAAM,EAAEzB,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFrC,EAGG,CAACE,SAAD,IAAcF,MAAM,CAACyB,MAAP,KAAkB,CAAhC,iBAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBAHxC,EAKGvB,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBALhB,CAJF,CADF;AAcC;;AAEH,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}